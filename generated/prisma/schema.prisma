generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Administrator model
model Administrator {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String   @unique
  password   String
  role       String
  department String
  createdAt  DateTime @default(now())

  @@map("administrators")
}

// Courier model
model Courier {
  id         Int        @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String     @unique
  password   String
  role       String
  status     String
  deliveries Delivery[]

  @@map("couriers")
}

// Customer model
model Customer {
  id            Int     @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String  @unique
  password      String
  role          String
  contactNumber String
  address       String
  city          String
  state         String
  country       String
  orders        Order[]

  @@map("customers")
}

// Vendor model
model Vendor {
  id            Int       @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String    @unique
  password      String
  role          String
  contactNumber String
  address       String
  status        String
  products      Product[]

  @@map("vendors")
}

// Product model
model Product {
  id            Int            @id @default(autoincrement())
  name          String
  price         Float
  description   String?
  vendorId      Int?
  vendor        Vendor?        @relation(fields: [vendorId], references: [id])
  orderProducts OrderProduct[]

  @@map("products")
}

// Order model
model Order {
  id            Int            @id @default(autoincrement())
  customerId    Int
  customer      Customer       @relation(fields: [customerId], references: [id])
  date          DateTime
  status        String
  deliveries    Delivery[]
  orderProducts OrderProduct[]

  @@map("orders")
}

// Junction table for Order-Product many-to-many relationship
model OrderProduct {
  id        Int     @id @default(autoincrement())
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int     @default(1)

  @@unique([orderId, productId])
  @@map("order_products")
}

// Delivery model
model Delivery {
  id           Int      @id @default(autoincrement())
  orderId      Int
  order        Order    @relation(fields: [orderId], references: [id])
  deliveryDate DateTime
  status       String
  courierId    Int?
  courier      Courier? @relation(fields: [courierId], references: [id])

  @@map("deliveries")
}
